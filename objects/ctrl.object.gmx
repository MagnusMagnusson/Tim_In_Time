<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//clones: STORES CONTROLLERS
clones = ds_list_create();
//Timestamps: STORES FRAMES
timestamps = ds_stack_create();
//current: STORES CURRENT CONTROLLER
current = ds_list_create();
//numbers: Stores nr = id
numbers = ds_map_create();


warping = false;

init_current(noone);

worldtick = -room_speed*3;

if(instance_number(ctrl) &gt; 1){
    instance_destroy();
}
//application_surface_draw_enable(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tick world and count.
if(warping == 0){
    worldtick++;
    if(abs(worldtick) % 4 == 0){
        var newframe = keyframe_save();
        ds_stack_push(timestamps,newframe);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TimeWarp

// Start backwards warp.
if( instance_exists(o_player)){
    if(keyboard_check_pressed(ord('Z')) &amp;&amp; warping == 0){
        if(stopped()){
            time_warp();    
            var i = instance_create(-999,-999,o_clone);
            init_current(i);
        }
    }
    
    if(warping != 0){ //We are warping to somewhere.
        //Warp clones backwards
        if(warping == -1){
            if(!ds_stack_empty(timestamps)){
                var frame;
                frame = ds_stack_pop(timestamps);
                keyframe_load(frame,true);
            }
            else{
                worldtick -= 4;
            }
        }
        
        if(warping == -1 &amp;&amp; !keyboard_check(ord('Z'))){
        //Stop the warp process.
            warping = 0;
            o_player.birth = worldtick-1;
            o_player.originx = o_player.x;
            o_player.originy = o_player.y;
            with(o_clone){
                clone_safezone();/*
                for(var i = 0; i &lt; ds_list_size(controller); i+=2){
                    if(controller[|i] &gt;= ctrl.worldtick){
                        command = i/2;
                        i = ds_list_size(controller);
                        break;
                    }
                }*/
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///First appearance
if(worldtick == 0){
    if(!instance_exists(o_player) &amp;&amp; !instance_exists(dead_guy)){
        instance_create(o_player_here.x, o_player_here.y,o_player);
        with(o_player_here){
            instance_destroy();
        }
        audio_play_sound(snd_warp,2,false);
        repeat(50){
        effect_create_above(ef_spark,o_player.x + irandom(32+64) - 16, o_player.y + irandom(32 +128) - 16,irandom(3),c_aqua)
        effect_create_above(ef_star,o_player.x + irandom(64), o_player.y + irandom(128),irandom(3),c_white)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///restart

if keyboard_check_pressed(ord('R')){
    with(o_player){
        clean(id);
    }
    with(o_clone){
        clean(id);
    }
    clean(id);
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(o_player){
    clean(id);
}

with(o_clone){
    clean(id);
    instance_destroy();
}

clean(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
warping = false;

init_current(noone);

worldtick = -room_speed*3;

audio_play_sound(snd_crack,2,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(warping == 0){
    draw_surface(application_surface,0,0);
}
else{
    shader_set(shade_bright);
    draw_surface(application_surface,0,0);
    shader_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(0,0,worldtick);
draw_text(0,32,ds_list_size(current));
draw_text(0,48,instance_number(o_clone));
for(var i = 0; i &lt; ds_list_size(current); i++){
    draw_text(0,64 + 32*i,current[|i]);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fadeout

if(instance_exists(o_player) &amp;&amp; o_player.dying){
    draw_reset();
}
if(!instance_exists(dead_guy) &amp;&amp; !instance_exists(o_player) &amp;&amp; !instance_exists(o_player_here) &amp;&amp; !alarm[1]){   
    draw_reset();
    room_goto_next();
}
if(!instance_exists(o_player) &amp;&amp; (instance_exists(o_player_here) || instance_exists(dead_guy))){
    draw_set_color(c_white);
    var temp;
    temp = worldtick;
    if(instance_exists(dead_guy)){
        temp = min(worldtick,0)
    }
    draw_set_alpha(min(abs(temp)/(2*room_speed),1))
    draw_rectangle(0,0,room_width,room_height,false);
    draw_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
