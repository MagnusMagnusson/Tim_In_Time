<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clones = ds_list_create();
timestamps = ds_list_create();
current = ds_list_create();
warping = false;

init_current(noone);

worldtick = -room_speed*3;

//application_surface_draw_enable(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tick world and count.
if(warping == 0){
    worldtick++;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TimeWarp

// Start backwards warp.
if(keyboard_check_pressed(ord('Z')) &amp;&amp; warping == 0){
    if(stopped()){
        time_warp();    
        var i = instance_create(-999,-999,o_clone);
        init_current(i);
        while(worldtick % 4 != 0){
            worldtick++;
        }
    }
}

if(warping != 0){ //We are warping to somewhere.
    worldtick += 4*warping;
    if(warping == -1 &amp;&amp; !keyboard_check(ord('Z'))){
    //Stop the warp process.
        warping = 0;
        worldtick++;
        o_player.birth = worldtick-1;
        with(o_clone){
            clone_safezone();
        }
    }
    //Warp clones backwards
    if(warping == -1){
        with(o_clone){
            var length, xx, yy;
            length = ds_list_size(mypath);
            show_debug_message(string(length));
            if(length &gt;= 10){
                drop = mypath[|length - 1];
                command = mypath[|length - 2];
                vright = mypath[|length - 3];
                vleft = mypath[|length - 4];
                vdown = mypath[|length - 5];
                vup = mypath[|length - 6];
                hsped = mypath[|length - 7];
                vsped = mypath[|length - 8];
                y = mypath[|length - 9];
                x = mypath[|length -10];
                visible = true;
                
                for(var j = 1; j &lt; 11; j++){
                    ds_list_delete(mypath,length - j);
                }
                
                show_debug_message("warping!");
            }
            if(ctrl.worldtick &lt; death &amp;&amp; ctrl.worldtick + 4 &gt; death){
                repeat(100){
                    visible = true;
                    effect_create_above(ef_spark,x + irandom(64),  y + irandom(128),irandom(3),c_white)
                }  
            }
            if(ctrl.worldtick &lt; birth &amp;&amp; ctrl.worldtick + 4 &gt; birth){
                repeat(100){
                    visible = false;
                    effect_create_above(ef_spark,x + irandom(64), y + irandom(128),irandom(3),c_aqua)
                    effect_create_above(ef_star,x + irandom(64), y + irandom(128),irandom(3),c_white)
                }  
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///First appearance
if(worldtick == 0){
    if(!instance_exists(o_player)){
        instance_create(o_player_here.x, o_player_here.y,o_player);
        with(o_player_here){
            instance_destroy();
        }
        repeat(50){
        effect_create_above(ef_spark,o_player.x + irandom(32+64) - 16, o_player.y + irandom(32 +128) - 16,irandom(3),c_aqua)
        effect_create_above(ef_star,o_player.x + irandom(64), o_player.y + irandom(128),irandom(3),c_white)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(o_player){
    clean(id);
}

with(o_clone){
    clean(id);
    instance_destroy();
}

clean(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
warping = false;

init_current(noone);

worldtick = -room_speed*3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(warping == 0){
    draw_surface(application_surface,0,0);
}
else{
    shader_set(shade_bright);
    draw_surface(application_surface,0,0);
    shader_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(0,0,worldtick);
draw_text(0,32,ds_list_size(current));
draw_text(0,48,instance_number(o_clone));
for(var i = 0; i &lt; ds_list_size(current); i++){
    draw_text(0,64 + 32*i,current[|i]);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fadeout

if(instance_exists(o_player) &amp;&amp; o_player.dying){
show_debug_message("1");
    draw_set_color(c_white);
    draw_set_alpha(1 - o_player.image_alpha)
    draw_rectangle(0,0,room_width,room_height,false);
    draw_reset();
}
if(!instance_exists(o_player) &amp;&amp; !instance_exists(o_player_here)){   
show_debug_message("Chroma"); 
    draw_set_color(c_white);
    draw_set_alpha(1)
    draw_rectangle(0,0,room_width,room_height,false);
    draw_reset();
    room_goto_next();
}
if(!instance_exists(o_player) &amp;&amp; instance_exists(o_player_here)){
show_debug_message("Lol");
    draw_set_color(c_white);
    draw_set_alpha(min(abs(worldtick)/(2*room_speed),1))
    draw_rectangle(0,0,room_width,room_height,false);
    draw_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
